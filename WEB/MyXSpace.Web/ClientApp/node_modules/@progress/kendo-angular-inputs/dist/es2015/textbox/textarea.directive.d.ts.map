{"version":3,"file":"textarea.directive.d.ts","sources":["F:/Projects/Adequat.MyX-MY/WEB/MyXSpace.Web/ClientApp/node_modules/@progress/kendo-angular-inputs/dist/es2015/textbox/textarea.directive.d.ts"],"sourcesContent":["import { ElementRef, EventEmitter, OnDestroy, Renderer2, OnChanges, OnInit, NgZone, ChangeDetectorRef, Injector } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\n/**\n * Represents the [Kendo UI TextArea directive for the Inputs components for Angular]({% slug overview_textarea %}).\n * Provides floating labels to `textarea` elements.\n *\n * @example\n * ```ts-no-run\n * <textarea kendoTextArea></textarea>\n * ```\n */\nexport declare class TextAreaDirective implements OnInit, OnDestroy, OnChanges, ControlValueAccessor {\n    private renderer;\n    private element;\n    private zone;\n    private changeDetector;\n    private injector;\n    readonly elementClass: boolean;\n    direction: string;\n    /**\n     * Fires each time the textarea value is changed.\n     */\n    valueChange: EventEmitter<any>;\n    /**\n     * Specifies if the `textarea` element will resize its height automatically\n     * ([see example]({% slug overview_textarea %}#toc-auto-resizing)).\n     *\n     * @default false\n     */\n    autoSize: boolean;\n    /**\n     * Specifies the textarea value.\n     */\n    value: string;\n    /**\n     * @hidden\n     */\n    onFocus: EventEmitter<any>;\n    /**\n     * @hidden\n     */\n    onBlur: EventEmitter<any>;\n    /**\n     * @hidden\n     */\n    onValueChange: EventEmitter<any>;\n    id: string;\n    private listeners;\n    private inputSubscription;\n    private initialHeight;\n    private control;\n    constructor(renderer: Renderer2, element: ElementRef, zone: NgZone, changeDetector: ChangeDetectorRef, injector: Injector, rtl: boolean);\n    /**\n     * @hidden\n     */\n    writeValue(value: any): void;\n    /**\n     * @hidden\n     */\n    registerOnChange(fn: () => any): void;\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn: () => any): void;\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled: boolean): void;\n    ngOnInit(): void;\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    private ngChange;\n    private ngTouched;\n    private elementValue;\n    private setElementProperty;\n    private resize;\n    private handleInput;\n    private handleFocus;\n    private handleBlur;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;"}